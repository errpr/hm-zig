pub const GLenum = c_uint;
pub const GLboolean = u8;
pub const GLbitfield = c_uint;
pub const GLbyte = i8;
pub const GLshort = c_short;
pub const GLint = c_int;
pub const GLsizei = c_int;
pub const GLubyte = u8;
pub const GLushort = c_ushort;
pub const GLuint = c_uint;
pub const GLfloat = f32;
pub const GLclampf = f32;
pub const GLdouble = f64;
pub const GLclampd = f64;
pub const GLvoid = c_void;
pub const PFNGLARRAYELEMENTEXTPROC = ?stdcallcc fn(GLint) void;
pub const PFNGLDRAWARRAYSEXTPROC = ?stdcallcc fn(GLenum, GLint, GLsizei) void;
pub const PFNGLVERTEXPOINTEREXTPROC = ?stdcallcc fn(GLint, GLenum, GLsizei, GLsizei, ?*const GLvoid) void;
pub const PFNGLNORMALPOINTEREXTPROC = ?stdcallcc fn(GLenum, GLsizei, GLsizei, ?*const GLvoid) void;
pub const PFNGLCOLORPOINTEREXTPROC = ?stdcallcc fn(GLint, GLenum, GLsizei, GLsizei, ?*const GLvoid) void;
pub const PFNGLINDEXPOINTEREXTPROC = ?stdcallcc fn(GLenum, GLsizei, GLsizei, ?*const GLvoid) void;
pub const PFNGLTEXCOORDPOINTEREXTPROC = ?stdcallcc fn(GLint, GLenum, GLsizei, GLsizei, ?*const GLvoid) void;
pub const PFNGLEDGEFLAGPOINTEREXTPROC = ?stdcallcc fn(GLsizei, GLsizei, ?*const GLboolean) void;
pub const PFNGLGETPOINTERVEXTPROC = ?stdcallcc fn(GLenum, ?*(?*GLvoid)) void;
pub const PFNGLARRAYELEMENTARRAYEXTPROC = ?stdcallcc fn(GLenum, GLsizei, ?*const GLvoid) void;
pub const PFNGLDRAWRANGEELEMENTSWINPROC = ?stdcallcc fn(GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const GLvoid) void;
pub const PFNGLADDSWAPHINTRECTWINPROC = ?stdcallcc fn(GLint, GLint, GLsizei, GLsizei) void;
pub const PFNGLCOLORTABLEEXTPROC = ?stdcallcc fn(GLenum, GLenum, GLsizei, GLenum, GLenum, ?*const GLvoid) void;
pub const PFNGLCOLORSUBTABLEEXTPROC = ?stdcallcc fn(GLenum, GLsizei, GLsizei, GLenum, GLenum, ?*const GLvoid) void;
pub const PFNGLGETCOLORTABLEEXTPROC = ?stdcallcc fn(GLenum, GLenum, GLenum, ?*GLvoid) void;
pub const PFNGLGETCOLORTABLEPARAMETERIVEXTPROC = ?stdcallcc fn(GLenum, GLenum, ?*GLint) void;
pub const PFNGLGETCOLORTABLEPARAMETERFVEXTPROC = ?stdcallcc fn(GLenum, GLenum, ?*GLfloat) void;