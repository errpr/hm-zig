use @import("win32_types.zig");
use @import("gl_types.zig");

pub const PFNWGLCREATEBUFFERREGIONARBPROC = ?stdcallcc fn(HDC, c_int, UINT) HANDLE;
pub const PFNWGLDELETEBUFFERREGIONARBPROC = ?stdcallcc fn(HANDLE) VOID;
pub const PFNWGLSAVEBUFFERREGIONARBPROC = ?stdcallcc fn(HANDLE, c_int, c_int, c_int, c_int) BOOL;
pub const PFNWGLRESTOREBUFFERREGIONARBPROC = ?stdcallcc fn(HANDLE, c_int, c_int, c_int, c_int, c_int, c_int) BOOL;
pub const PFNWGLCREATECONTEXTATTRIBSARBPROC = ?stdcallcc fn(HDC, HGLRC, ?*const c_int) HGLRC;
pub const PFNWGLGETEXTENSIONSSTRINGARBPROC = ?stdcallcc fn(HDC) ?[*]const u8;
pub const PFNWGLMAKECONTEXTCURRENTARBPROC = ?stdcallcc fn(HDC, HDC, HGLRC) BOOL;
pub const PFNWGLGETCURRENTREADDCARBPROC = ?stdcallcc fn() HDC;
pub const struct_HPBUFFERARB__ = extern struct {
    i: c_int,
};
pub const HPBUFFERARB = ?*struct_HPBUFFERARB__;
pub const PFNWGLCREATEPBUFFERARBPROC = ?stdcallcc fn(HDC, c_int, c_int, c_int, ?*const c_int) HPBUFFERARB;
pub const PFNWGLGETPBUFFERDCARBPROC = ?stdcallcc fn(HPBUFFERARB) HDC;
pub const PFNWGLRELEASEPBUFFERDCARBPROC = ?stdcallcc fn(HPBUFFERARB, HDC) c_int;
pub const PFNWGLDESTROYPBUFFERARBPROC = ?stdcallcc fn(HPBUFFERARB) BOOL;
pub const PFNWGLQUERYPBUFFERARBPROC = ?stdcallcc fn(HPBUFFERARB, c_int, ?*c_int) BOOL;
pub const PFNWGLGETPIXELFORMATATTRIBIVARBPROC = ?stdcallcc fn(HDC, c_int, c_int, UINT, ?*const c_int, ?*c_int) BOOL;
pub const PFNWGLGETPIXELFORMATATTRIBFVARBPROC = ?stdcallcc fn(HDC, c_int, c_int, UINT, ?*const c_int, ?*FLOAT) BOOL;
pub const PFNWGLCHOOSEPIXELFORMATARBPROC = ?stdcallcc fn(HDC, ?*const c_int, ?*const FLOAT, UINT, ?*c_int, ?*UINT) BOOL;
pub const PFNWGLBINDTEXIMAGEARBPROC = ?stdcallcc fn(HPBUFFERARB, c_int) BOOL;
pub const PFNWGLRELEASETEXIMAGEARBPROC = ?stdcallcc fn(HPBUFFERARB, c_int) BOOL;
pub const PFNWGLSETPBUFFERATTRIBARBPROC = ?stdcallcc fn(HPBUFFERARB, ?*const c_int) BOOL;
pub const PFNWGLSETSTEREOEMITTERSTATE3DLPROC = ?stdcallcc fn(HDC, UINT) BOOL;
pub const PFNWGLGETGPUIDSAMDPROC = ?stdcallcc fn(UINT, ?*UINT) UINT;
pub const PFNWGLGETGPUINFOAMDPROC = ?stdcallcc fn(UINT, c_int, GLenum, UINT, ?*c_void) INT;
pub const PFNWGLGETCONTEXTGPUIDAMDPROC = ?stdcallcc fn(HGLRC) UINT;
pub const PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC = ?stdcallcc fn(UINT) HGLRC;
pub const PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC = ?stdcallcc fn(UINT, HGLRC, ?*const c_int) HGLRC;
pub const PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC = ?stdcallcc fn(HGLRC) BOOL;
pub const PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC = ?stdcallcc fn(HGLRC) BOOL;
pub const PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC = ?stdcallcc fn() HGLRC;
pub const PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC = ?stdcallcc fn(HGLRC, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) VOID;
pub const PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC = ?stdcallcc fn(GLushort) GLboolean;
pub const PFNWGLLOADDISPLAYCOLORTABLEEXTPROC = ?stdcallcc fn(?*const GLushort, GLuint) GLboolean;
pub const PFNWGLBINDDISPLAYCOLORTABLEEXTPROC = ?stdcallcc fn(GLushort) GLboolean;
pub const PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC = ?stdcallcc fn(GLushort) VOID;
pub const PFNWGLGETEXTENSIONSSTRINGEXTPROC = ?stdcallcc fn() ?[*]const u8;
pub const PFNWGLMAKECONTEXTCURRENTEXTPROC = ?stdcallcc fn(HDC, HDC, HGLRC) BOOL;
pub const PFNWGLGETCURRENTREADDCEXTPROC = ?stdcallcc fn() HDC;
pub const struct_HPBUFFEREXT__ = extern struct {
    i: c_int,
};
pub const HPBUFFEREXT = ?*struct_HPBUFFEREXT__;
pub const PFNWGLCREATEPBUFFEREXTPROC = ?stdcallcc fn(HDC, c_int, c_int, c_int, ?*const c_int) HPBUFFEREXT;
pub const PFNWGLGETPBUFFERDCEXTPROC = ?stdcallcc fn(HPBUFFEREXT) HDC;
pub const PFNWGLRELEASEPBUFFERDCEXTPROC = ?stdcallcc fn(HPBUFFEREXT, HDC) c_int;
pub const PFNWGLDESTROYPBUFFEREXTPROC = ?stdcallcc fn(HPBUFFEREXT) BOOL;
pub const PFNWGLQUERYPBUFFEREXTPROC = ?stdcallcc fn(HPBUFFEREXT, c_int, ?*c_int) BOOL;
pub const PFNWGLGETPIXELFORMATATTRIBIVEXTPROC = ?stdcallcc fn(HDC, c_int, c_int, UINT, ?*c_int, ?*c_int) BOOL;
pub const PFNWGLGETPIXELFORMATATTRIBFVEXTPROC = ?stdcallcc fn(HDC, c_int, c_int, UINT, ?*c_int, ?*FLOAT) BOOL;
pub const PFNWGLCHOOSEPIXELFORMATEXTPROC = ?stdcallcc fn(HDC, ?*const c_int, ?*const FLOAT, UINT, ?*c_int, ?*UINT) BOOL;
pub const PFNWGLSWAPINTERVALEXTPROC = ?stdcallcc fn(c_int) BOOL;
pub const PFNWGLGETSWAPINTERVALEXTPROC = ?stdcallcc fn() c_int;
pub const PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC = ?stdcallcc fn(HDC, c_int, ?*c_int) BOOL;
pub const PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC = ?stdcallcc fn(HDC, c_int, ?*const c_int) BOOL;
pub const PFNWGLGETGAMMATABLEPARAMETERSI3DPROC = ?stdcallcc fn(HDC, c_int, ?*c_int) BOOL;
pub const PFNWGLSETGAMMATABLEPARAMETERSI3DPROC = ?stdcallcc fn(HDC, c_int, ?*const c_int) BOOL;
pub const PFNWGLGETGAMMATABLEI3DPROC = ?stdcallcc fn(HDC, c_int, ?*USHORT, ?*USHORT, ?*USHORT) BOOL;
pub const PFNWGLSETGAMMATABLEI3DPROC = ?stdcallcc fn(HDC, c_int, ?*const USHORT, ?*const USHORT, ?*const USHORT) BOOL;
pub const PFNWGLENABLEGENLOCKI3DPROC = ?stdcallcc fn(HDC) BOOL;
pub const PFNWGLDISABLEGENLOCKI3DPROC = ?stdcallcc fn(HDC) BOOL;
pub const PFNWGLISENABLEDGENLOCKI3DPROC = ?stdcallcc fn(HDC, ?*BOOL) BOOL;
pub const PFNWGLGENLOCKSOURCEI3DPROC = ?stdcallcc fn(HDC, UINT) BOOL;
pub const PFNWGLGETGENLOCKSOURCEI3DPROC = ?stdcallcc fn(HDC, ?*UINT) BOOL;
pub const PFNWGLGENLOCKSOURCEEDGEI3DPROC = ?stdcallcc fn(HDC, UINT) BOOL;
pub const PFNWGLGETGENLOCKSOURCEEDGEI3DPROC = ?stdcallcc fn(HDC, ?*UINT) BOOL;
pub const PFNWGLGENLOCKSAMPLERATEI3DPROC = ?stdcallcc fn(HDC, UINT) BOOL;
pub const PFNWGLGETGENLOCKSAMPLERATEI3DPROC = ?stdcallcc fn(HDC, ?*UINT) BOOL;
pub const PFNWGLGENLOCKSOURCEDELAYI3DPROC = ?stdcallcc fn(HDC, UINT) BOOL;
pub const PFNWGLGETGENLOCKSOURCEDELAYI3DPROC = ?stdcallcc fn(HDC, ?*UINT) BOOL;
pub const PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC = ?stdcallcc fn(HDC, ?*UINT, ?*UINT) BOOL;
pub const PFNWGLCREATEIMAGEBUFFERI3DPROC = ?stdcallcc fn(HDC, DWORD, UINT) LPVOID;
pub const PFNWGLDESTROYIMAGEBUFFERI3DPROC = ?stdcallcc fn(HDC, LPVOID) BOOL;
pub const PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC = ?stdcallcc fn(HDC, ?*const HANDLE, ?*const LPVOID, ?*const DWORD, UINT) BOOL;
pub const PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC = ?stdcallcc fn(HDC, ?*const LPVOID, UINT) BOOL;
pub const PFNWGLENABLEFRAMELOCKI3DPROC = ?stdcallcc fn() BOOL;
pub const PFNWGLDISABLEFRAMELOCKI3DPROC = ?stdcallcc fn() BOOL;
pub const PFNWGLISENABLEDFRAMELOCKI3DPROC = ?stdcallcc fn(?*BOOL) BOOL;
pub const PFNWGLQUERYFRAMELOCKMASTERI3DPROC = ?stdcallcc fn(?*BOOL) BOOL;
pub const PFNWGLGETFRAMEUSAGEI3DPROC = ?stdcallcc fn(?*f32) BOOL;
pub const PFNWGLBEGINFRAMETRACKINGI3DPROC = ?stdcallcc fn() BOOL;
pub const PFNWGLENDFRAMETRACKINGI3DPROC = ?stdcallcc fn() BOOL;
pub const PFNWGLQUERYFRAMETRACKINGI3DPROC = ?stdcallcc fn(?*DWORD, ?*DWORD, ?*f32) BOOL;
pub const PFNWGLDXSETRESOURCESHAREHANDLENVPROC = ?stdcallcc fn(?*c_void, HANDLE) BOOL;
pub const PFNWGLDXOPENDEVICENVPROC = ?stdcallcc fn(?*c_void) HANDLE;
pub const PFNWGLDXCLOSEDEVICENVPROC = ?stdcallcc fn(HANDLE) BOOL;
pub const PFNWGLDXREGISTEROBJECTNVPROC = ?stdcallcc fn(HANDLE, ?*c_void, GLuint, GLenum, GLenum) HANDLE;
pub const PFNWGLDXUNREGISTEROBJECTNVPROC = ?stdcallcc fn(HANDLE, HANDLE) BOOL;
pub const PFNWGLDXOBJECTACCESSNVPROC = ?stdcallcc fn(HANDLE, GLenum) BOOL;
pub const PFNWGLDXLOCKOBJECTSNVPROC = ?stdcallcc fn(HANDLE, GLint, ?*HANDLE) BOOL;
pub const PFNWGLDXUNLOCKOBJECTSNVPROC = ?stdcallcc fn(HANDLE, GLint, ?*HANDLE) BOOL;
pub const PFNWGLCOPYIMAGESUBDATANVPROC = ?stdcallcc fn(HGLRC, GLuint, GLenum, GLint, GLint, GLint, GLint, HGLRC, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei) BOOL;
pub const PFNWGLDELAYBEFORESWAPNVPROC = ?stdcallcc fn(HDC, GLfloat) BOOL;
pub const struct_HGPUNV__ = extern struct {
    i: c_int,
};
pub const HGPUNV = ?*struct_HGPUNV__;
pub const struct__GPU_DEVICE = extern struct {
    cb: DWORD,
    DeviceName: [32]CHAR,
    DeviceString: [128]CHAR,
    Flags: DWORD,
    rcVirtualScreen: RECT,
};
pub const PGPU_DEVICE = ?*struct__GPU_DEVICE;
pub const PFNWGLENUMGPUSNVPROC = ?stdcallcc fn(UINT, ?*HGPUNV) BOOL;
pub const PFNWGLENUMGPUDEVICESNVPROC = ?stdcallcc fn(HGPUNV, UINT, PGPU_DEVICE) BOOL;
pub const PFNWGLCREATEAFFINITYDCNVPROC = ?stdcallcc fn(?*const HGPUNV) HDC;
pub const PFNWGLENUMGPUSFROMAFFINITYDCNVPROC = ?stdcallcc fn(HDC, UINT, ?*HGPUNV) BOOL;
pub const PFNWGLDELETEDCNVPROC = ?stdcallcc fn(HDC) BOOL;
pub const struct_HVIDEOOUTPUTDEVICENV__ = extern struct {
    i: c_int,
};
pub const HVIDEOOUTPUTDEVICENV = ?*struct_HVIDEOOUTPUTDEVICENV__;
pub const PFNWGLENUMERATEVIDEODEVICESNVPROC = ?stdcallcc fn(HDC, ?*HVIDEOOUTPUTDEVICENV) c_int;
pub const PFNWGLBINDVIDEODEVICENVPROC = ?stdcallcc fn(HDC, c_uint, HVIDEOOUTPUTDEVICENV, ?*const c_int) BOOL;
pub const PFNWGLQUERYCURRENTCONTEXTNVPROC = ?stdcallcc fn(c_int, ?*c_int) BOOL;
pub const PFNWGLJOINSWAPGROUPNVPROC = ?stdcallcc fn(HDC, GLuint) BOOL;
pub const PFNWGLBINDSWAPBARRIERNVPROC = ?stdcallcc fn(GLuint, GLuint) BOOL;
pub const PFNWGLQUERYSWAPGROUPNVPROC = ?stdcallcc fn(HDC, ?*GLuint, ?*GLuint) BOOL;
pub const PFNWGLQUERYMAXSWAPGROUPSNVPROC = ?stdcallcc fn(HDC, ?*GLuint, ?*GLuint) BOOL;
pub const PFNWGLQUERYFRAMECOUNTNVPROC = ?stdcallcc fn(HDC, ?*GLuint) BOOL;
pub const PFNWGLRESETFRAMECOUNTNVPROC = ?stdcallcc fn(HDC) BOOL;
pub const PFNWGLALLOCATEMEMORYNVPROC = ?stdcallcc fn(GLsizei, GLfloat, GLfloat, GLfloat) ?*c_void;
pub const PFNWGLFREEMEMORYNVPROC = ?stdcallcc fn(?*c_void) void;
pub const struct_HVIDEOINPUTDEVICENV__ = extern struct {
    i: c_int,
};
pub const HVIDEOINPUTDEVICENV = ?*struct_HVIDEOINPUTDEVICENV__;
pub const PFNWGLBINDVIDEOCAPTUREDEVICENVPROC = ?stdcallcc fn(UINT, HVIDEOINPUTDEVICENV) BOOL;
pub const PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC = ?stdcallcc fn(HDC, ?*HVIDEOINPUTDEVICENV) UINT;
pub const PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC = ?stdcallcc fn(HDC, HVIDEOINPUTDEVICENV) BOOL;
pub const PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC = ?stdcallcc fn(HDC, HVIDEOINPUTDEVICENV, c_int, ?*c_int) BOOL;
pub const PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC = ?stdcallcc fn(HDC, HVIDEOINPUTDEVICENV) BOOL;
pub const struct_HPVIDEODEV__ = extern struct {
    i: c_int,
};
pub const HPVIDEODEV = ?*struct_HPVIDEODEV__;
pub const PFNWGLGETVIDEODEVICENVPROC = ?stdcallcc fn(HDC, c_int, ?*HPVIDEODEV) BOOL;
pub const PFNWGLRELEASEVIDEODEVICENVPROC = ?stdcallcc fn(HPVIDEODEV) BOOL;
pub const PFNWGLBINDVIDEOIMAGENVPROC = ?stdcallcc fn(HPVIDEODEV, HPBUFFERARB, c_int) BOOL;
pub const PFNWGLRELEASEVIDEOIMAGENVPROC = ?stdcallcc fn(HPBUFFERARB, c_int) BOOL;
pub const PFNWGLSENDPBUFFERTOVIDEONVPROC = ?stdcallcc fn(HPBUFFERARB, c_int, ?*c_ulong, BOOL) BOOL;
pub const PFNWGLGETVIDEOINFONVPROC = ?stdcallcc fn(HPVIDEODEV, ?*c_ulong, ?*c_ulong) BOOL;
pub const PFNWGLGETSYNCVALUESOMLPROC = ?stdcallcc fn(HDC, ?*INT64, ?*INT64, ?*INT64) BOOL;
pub const PFNWGLGETMSCRATEOMLPROC = ?stdcallcc fn(HDC, ?*INT32, ?*INT32) BOOL;
pub const PFNWGLSWAPBUFFERSMSCOMLPROC = ?stdcallcc fn(HDC, INT64, INT64, INT64) INT64;
pub const PFNWGLSWAPLAYERBUFFERSMSCOMLPROC = ?stdcallcc fn(HDC, c_int, INT64, INT64, INT64) INT64;
pub const PFNWGLWAITFORMSCOMLPROC = ?stdcallcc fn(HDC, INT64, INT64, INT64, ?*INT64, ?*INT64, ?*INT64) BOOL;
pub const PFNWGLWAITFORSBCOMLPROC = ?stdcallcc fn(HDC, INT64, ?*INT64, ?*INT64, ?*INT64) BOOL;
pub const WGL_AUX3_ARB = 8330;
pub const WGL_GAMMA_EXCLUDE_DESKTOP_I3D = 8271;
//pub const __BIGGEST_ALIGNMENT__ = 16;
//pub const __SIZEOF_FLOAT__ = 4;
//pub const __INT64_FMTd__ = c"lld";
//pub const __STDC_VERSION__ = c_long(201112);
//pub const __INT_LEAST32_FMTi__ = c"i";
pub const WGL_ALPHA_SHIFT_EXT = 8220;
pub const WGL_NUM_VIDEO_SLOTS_NV = 8432;
//pub const __INT_LEAST8_FMTi__ = c"hhi";
pub const WGL_SHARE_DEPTH_ARB = 8204;
pub const WGL_CONTEXT_ES_PROFILE_BIT_EXT = 4;
//pub const __LDBL_EPSILON__ = 0.000000;
//pub const __INT_LEAST32_FMTd__ = c"d";
//pub const __STDC_UTF_32__ = 1;
pub const WGL_FRONT_RIGHT_ARB = 8324;
pub const WGL_STENCIL_BUFFER_BIT_ARB = 8;
//pub const __SIG_ATOMIC_WIDTH__ = 32;
pub const WGL_NV_video_output = 1;
//pub const __UINT_FAST64_FMTX__ = c"llX";
//pub const __clang_version__ = c"5.0.1 (tags/RELEASE_501/final)";
//pub const __UINT_LEAST8_FMTo__ = c"hho";
pub const WGL_TEXTURE_CUBE_MAP_ARB = 8312;
pub const WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = 8;
//pub const __SIZEOF_DOUBLE__ = 8;
pub const WGL_STENCIL_BITS_ARB = 8227;
//pub const __INTMAX_FMTd__ = c"lld";
pub const WGL_TYPE_COLORINDEX_ARB = 8236;
pub const ERROR_INVALID_PROFILE_ARB = 8342;
//pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = 2;
pub const WGL_UNIQUE_ID_NV = 8398;
//pub const __INT_LEAST16_FMTi__ = c"hi";
pub const WGL_SHARE_STENCIL_ARB = 8205;
pub const WGL_ACCELERATION_ARB = 8195;
pub const WGL_AUX_BUFFERS_EXT = 8228;
//pub const __MMX__ = 1;
pub const WGL_STEREO_EXT = 8210;
pub const WGL_ACCUM_BITS_EXT = 8221;
pub const WGL_SWAP_EXCHANGE_ARB = 8232;
pub const WGL_GPU_OPENGL_VERSION_STRING_AMD = 7938;
//pub const __SIZE_FMTX__ = c"llX";
pub const WGL_ACCESS_READ_ONLY_NV = 0;
pub const WGL_PBUFFER_LARGEST_EXT = 8243;
pub const ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = 8400;
pub const WGL_ARB_create_context = 1;
pub const WGL_FRONT_COLOR_BUFFER_BIT_ARB = 1;
pub const WGL_TEXTURE_1D_ARB = 8313;
pub const WGL_AUX5_ARB = 8332;
pub const WGL_I3D_digital_video_control = 1;
//pub const __WCHAR_WIDTH__ = 16;
pub const WGL_COLOR_SAMPLES_NV = 8377;
pub const WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 8319;
//pub const __PTRDIFF_FMTd__ = c"lld";
//pub const __DBL_MIN_EXP__ = -1021;
//pub const __FLT_EVAL_METHOD__ = 0;
//pub const __SSE_MATH__ = 1;
pub const WGL_NO_ACCELERATION_EXT = 8229;
//pub const __UINT_FAST8_FMTo__ = c"hho";
pub const WGL_CONTEXT_DEBUG_BIT_ARB = 1;
pub const WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = 8361;
//pub const __UINT_LEAST64_MAX__ = c_ulonglong(18446744073709551615);
//pub const __UINT_LEAST64_FMTx__ = c"llx";
pub const WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = 8273;
//pub const __INT8_MAX__ = 127;
//pub const __DBL_HAS_DENORM__ = 1;
pub const WGL_SAMPLE_BUFFERS_EXT = 8257;
//pub const __ATOMIC_RELAXED = 0;
//pub const __DBL_DECIMAL_DIG__ = 17;
//pub const __SIZEOF_SHORT__ = 2;
//pub const __UINT_FAST16_MAX__ = 65535;
//pub const __UINT16_FMTX__ = c"hX";
pub const WGL_GREEN_BITS_ARB = 8215;
//pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = 2;
pub const WGL_NV_swap_group = 1;
//pub const __CONSTANT_CFSTRINGS__ = 1;
pub const WGL_PBUFFER_LARGEST_ARB = 8243;
pub const WGL_CONTEXT_OPENGL_NO_ERROR_ARB = 12723;
pub const WGL_I3D_genlock = 1;
pub const WGL_DEPTH_COMPONENT_NV = 8359;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = 8371;
pub const WGL_EXT_multisample = 1;
//pub const __LDBL_MAX_EXP__ = 1024;
//pub const _WIN64 = 1;
//pub const __NO_MATH_INLINES = 1;
pub const WGL_STEREO_EMITTER_DISABLE_3DL = 8278;
pub const WGL_SWAP_COPY_EXT = 8233;
//pub const __LONG_MAX__ = c_long(2147483647);
pub const WGL_PBUFFER_HEIGHT_EXT = 8245;
pub const WGL_EXT_depth_float = 1;
//pub const __STDC_HOSTED__ = 1;
//pub const __pic__ = 2;
//pub const __PTRDIFF_WIDTH__ = 64;
//pub const __INT_FAST16_FMTi__ = c"hi";
pub const WGL_ARB_create_context_no_error = 1;
//pub const __INT_LEAST32_TYPE__ = int;
//pub const __SCHAR_MAX__ = 127;
//pub const __LDBL_DENORM_MIN__ = 0.000000;
pub const WGL_AUX8_ARB = 8335;
pub const WGL_TRANSPARENT_VALUE_EXT = 8203;
pub const WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = 8391;
//pub const __INT64_C_SUFFIX__ = LL;
pub const WGL_CONTEXT_CORE_PROFILE_BIT_ARB = 1;
pub const WGL_VIDEO_OUT_FRAME = 8392;
pub const WGL_CONTEXT_FLAGS_ARB = 8340;
pub const WGL_TRANSPARENT_ALPHA_VALUE_ARB = 8250;
pub const WGL_DEPTH_BUFFER_BIT_ARB = 4;
//pub const __LDBL_MANT_DIG__ = 53;
//pub const WINAPI = __stdcall;
pub const WGL_ARB_pixel_format = 1;
//pub const __CLANG_ATOMIC_INT_LOCK_FREE = 2;
//pub const __SIZEOF_PTRDIFF_T__ = 8;
pub const WGL_NV_gpu_affinity = 1;
pub const WGL_VIDEO_OUT_DEPTH_NV = 8389;
pub const WGL_TEXTURE_FLOAT_RGB_NV = 8375;
//pub const __SIG_ATOMIC_MAX__ = 2147483647;
pub const WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = 33366;
//pub const __UINT64_FMTX__ = c"llX";
pub const WGL_NEED_PALETTE_ARB = 8196;
pub const WGL_VIDEO_OUT_ALPHA_NV = 8388;
//pub const __UINT64_MAX__ = c_ulonglong(18446744073709551615);
//pub const __DBL_MANT_DIG__ = 53;
//pub const __FLT_DECIMAL_DIG__ = 9;
pub const WGL_TYPE_COLORINDEX_EXT = 8236;
//pub const __INT_LEAST32_MAX__ = 2147483647;
pub const WGL_TYPE_RGBA_FLOAT_ARB = 8608;
//pub const __DBL_DIG__ = 15;
//pub const __ATOMIC_ACQUIRE = 2;
pub const WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D = 8263;
pub const WGL_ACCUM_GREEN_BITS_ARB = 8223;
pub const WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = 8396;
pub const WGL_SWAP_METHOD_ARB = 8199;
pub const WGL_PBUFFER_WIDTH_ARB = 8244;
pub const WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = 8272;
pub const WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D = 8262;
//pub const __UINT_FAST16_FMTu__ = c"hu";
//pub const __INTPTR_FMTi__ = c"lli";
pub const WGL_ARB_create_context_profile = 1;
pub const WGL_ARB_pixel_format_float = 1;
pub const WGL_NUMBER_OVERLAYS_ARB = 8200;
//pub const __UINT_FAST8_FMTX__ = c"hhX";
//pub const __LITTLE_ENDIAN__ = 1;
//pub const __SSE__ = 1;
pub const WGL_PBUFFER_HEIGHT_ARB = 8245;
//pub const __FLT_HAS_QUIET_NAN__ = 1;
//pub const __SIZEOF_SIZE_T__ = 8;
pub const WGL_SAMPLES_ARB = 8258;
//pub const __UINT_LEAST16_FMTo__ = c"ho";
//pub const __UINT8_FMTo__ = c"hho";
//pub const _MSC_FULL_VER = 180000000;
pub const WGL_ARB_robustness_share_group_isolation = 1;
//pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = 2;
//pub const __UINT_LEAST16_FMTx__ = c"hx";
//pub const __UINT_FAST16_FMTX__ = c"hX";
pub const WGL_CONTEXT_RELEASE_BEHAVIOR_ARB = 8343;
//pub const __VERSION__ = c"4.2.1 Compatible Clang 5.0.1 (tags/RELEASE_501/final)";
//pub const __UINT_FAST32_FMTx__ = c"x";
//pub const __UINTPTR_MAX__ = c_ulonglong(18446744073709551615);
//pub const __UINT_FAST8_FMTu__ = c"hhu";
//pub const __UINT_LEAST8_FMTu__ = c"hhu";
//pub const __UINT_LEAST64_FMTo__ = c"llo";
pub const WGL_SHARE_STENCIL_EXT = 8205;
//pub const __UINT_LEAST8_MAX__ = 255;
pub const WGL_AUX0_ARB = 8327;
pub const WGL_ACCUM_BLUE_BITS_ARB = 8224;
pub const WGL_BACK_RIGHT_ARB = 8326;
pub const WGL_ACCESS_READ_WRITE_NV = 1;
//pub const __SIZEOF_WCHAR_T__ = 2;
pub const WGL_BLUE_SHIFT_EXT = 8218;
pub const WGL_PIXEL_TYPE_ARB = 8211;
//pub const __LDBL_MAX__ = 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878;
//pub const __UINT16_MAX__ = 65535;
pub const WGL_BACK_LEFT_ARB = 8325;
//pub const __x86_64 = 1;
pub const WGL_GREEN_BITS_EXT = 8215;
pub const WGL_AUX6_ARB = 8333;
//pub const __SIZEOF_WINT_T__ = 4;
pub const WGL_ALPHA_SHIFT_ARB = 8220;
//pub const __UINTMAX_FMTo__ = c"llo";
//pub const __FLT_DIG__ = 6;
pub const WGL_DOUBLE_BUFFER_EXT = 8209;
//pub const __UINT_LEAST8_FMTX__ = c"hhX";
//pub const __INT16_MAX__ = 32767;
pub const WGL_GPU_RAM_AMD = 8611;
pub const WGL_SWAP_METHOD_EXT = 8199;
//pub const __FLT_MAX_10_EXP__ = 38;
//pub const __UINTPTR_FMTX__ = c"llX";
//pub const __UINT_LEAST16_FMTu__ = c"hu";
//pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = 2;
pub const WGL_BIND_TO_TEXTURE_RGB_ARB = 8304;
//pub const __WINT_WIDTH__ = 32;
//pub const _MSC_EXTENSIONS = 1;
pub const WGL_EXT_make_current_read = 1;
pub const WGL_MAX_PBUFFER_PIXELS_EXT = 8238;
//pub const __SHRT_MAX__ = 32767;
//pub const _M_AMD64 = 100;
pub const WGL_3DL_stereo_control = 1;
pub const WGL_I3D_swap_frame_usage = 1;
pub const WGL_ACCUM_ALPHA_BITS_EXT = 8225;
pub const WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = 8264;
pub const WGL_SWAP_COPY_ARB = 8233;
//pub const __POINTER_WIDTH__ = 64;
pub const WGL_OML_sync_control = 1;
//pub const __PTRDIFF_MAX__ = c_longlong(9223372036854775807);
pub const WGL_TEXTURE_RGBA_ARB = 8310;
//pub const __INT32_FMTd__ = c"d";
//pub const __DBL_MIN__ = 0.000000;
pub const WGL_GPU_NUM_SPI_AMD = 8616;
//pub const __SIZEOF_LONG__ = 4;
//pub const _WIN32 = 1;
//pub const __INTPTR_WIDTH__ = 64;
pub const WGL_COVERAGE_SAMPLES_NV = 8258;
//pub const __INT_FAST32_TYPE__ = int;
pub const WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 8322;
pub const WGL_ARB_render_texture = 1;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = 8369;
//pub const __NO_INLINE__ = 1;
pub const WGL_ARB_context_flush_control = 1;
//pub const __UINT_FAST32_FMTX__ = c"X";
pub const WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = 4;
//pub const __INT_FAST32_MAX__ = 2147483647;
pub const WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = 8260;
//pub const __UINTMAX_FMTu__ = c"llu";
pub const WGL_EXT_extensions_string = 1;
pub const WGL_ACCELERATION_EXT = 8195;
pub const WGL_NV_multisample_coverage = 1;
pub const WGL_NUMBER_PIXEL_FORMATS_EXT = 8192;
//pub const __FLT_RADIX__ = 2;
pub const WGL_NUMBER_UNDERLAYS_EXT = 8201;
pub const WGL_BIND_TO_VIDEO_RGB_NV = 8384;
pub const WGL_NO_RESET_NOTIFICATION_ARB = 33377;
pub const WGL_EXT_create_context_es_profile = 1;
//pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = 1;
pub const WGL_SUPPORT_OPENGL_ARB = 8208;
pub const WGL_EXT_pbuffer = 1;
pub const WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = 8360;
//pub const __PRAGMA_REDEFINE_EXTNAME = 1;
//pub const __INT_FAST8_FMTd__ = c"hhd";
//pub const __INT32_TYPE__ = int;
pub const WGL_ACCUM_RED_BITS_ARB = 8222;
pub const WGL_ACCESS_WRITE_DISCARD_NV = 2;
pub const WGL_NUMBER_OVERLAYS_EXT = 8200;
//pub const __UINTMAX_WIDTH__ = 64;
pub const WGL_GREEN_SHIFT_ARB = 8216;
pub const WGL_GPU_NUM_SIMD_AMD = 8614;
pub const WGL_EXT_pixel_format_packed_float = 1;
//pub const __FLT_MIN__ = 0.000000;
//pub const __INT64_FMTi__ = c"lli";
//pub const __UINT_FAST64_FMTu__ = c"llu";
//pub const __INT8_FMTd__ = c"hhd";
//pub const __INT_FAST16_TYPE__ = short;
pub const WGL_TEXTURE_FLOAT_RG_NV = 8374;
pub const WGL_DEPTH_BITS_EXT = 8226;
pub const WGL_ARB_make_current_read = 1;
//pub const __FLT_MAX_EXP__ = 128;
pub const WGL_NEED_SYSTEM_PALETTE_ARB = 8197;
pub const WGL_GPU_RENDERER_STRING_AMD = 7937;
pub const WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = 8386;
pub const WGL_MAX_PBUFFER_HEIGHT_ARB = 8240;
pub const WGL_AUX9_ARB = 8336;
//pub const __DBL_MAX_10_EXP__ = 308;
//pub const __LDBL_MIN__ = 0.000000;
//pub const __INT_FAST64_FMTi__ = c"lli";
pub const WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = 2;
pub const WGL_RED_BITS_ARB = 8213;
//pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = 2;
//pub const __INT_LEAST8_FMTd__ = c"hhd";
//pub const __UINT_LEAST32_FMTX__ = c"X";
pub const WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D = 8261;
//pub const __PIC__ = 2;
pub const WGL_MAX_PBUFFER_PIXELS_ARB = 8238;
//pub const _MSC_BUILD = 1;
//pub const __UINTMAX_MAX__ = c_ulonglong(18446744073709551615);
pub const WGL_COLORSPACE_EXT = 12423;
pub const WGL_TRANSPARENT_BLUE_VALUE_ARB = 8249;
pub const WGL_AUX4_ARB = 8331;
pub const WGL_SUPPORT_OPENGL_EXT = 8208;
//pub const __UINT_FAST16_FMTo__ = c"ho";
//pub const __LDBL_DECIMAL_DIG__ = 17;
pub const WGL_SHARE_ACCUM_ARB = 8206;
pub const WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = 8399;
//pub const __UINT_LEAST64_FMTX__ = c"llX";
//pub const __clang_minor__ = 0;
pub const WGL_ACCUM_ALPHA_BITS_ARB = 8225;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = 8356;
pub const WGL_IMAGE_BUFFER_LOCK_I3D = 2;
pub const WGL_DRAW_TO_PBUFFER_EXT = 8237;
pub const WGL_EXT_display_color_table = 1;
pub const WGL_GENERIC_ACCELERATION_ARB = 8230;
pub const WGL_ARB_multisample = 1;
pub const WGL_TYPE_RGBA_ARB = 8235;
pub const WGL_TEXTURE_FLOAT_R_NV = 8373;
//pub const __UINT_FAST64_FMTo__ = c"llo";
pub const WGL_BLUE_BITS_EXT = 8217;
pub const WGL_FULL_ACCELERATION_ARB = 8231;
//pub const __SIZE_FMTx__ = c"llx";
pub const WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = 0;
pub const WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 8317;
pub const WGL_NV_video_capture = 1;
//pub const __DBL_MAX__ = 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878;
pub const WGL_COLORSPACE_SRGB_EXT = 12425;
//pub const __DBL_EPSILON__ = 0.000000;
pub const WGL_SAMPLE_BUFFERS_ARB = 8257;
//pub const __UINT64_FMTx__ = c"llx";
pub const WGL_STEREO_EMITTER_ENABLE_3DL = 8277;
//pub const _MSC_VER = 1800;
pub const WGL_CONTEXT_ES2_PROFILE_BIT_EXT = 4;
pub const WGL_PBUFFER_WIDTH_EXT = 8244;
pub const WGL_NO_TEXTURE_ARB = 8311;
//pub const __CHAR_BIT__ = 8;
pub const WGL_EXT_swap_control = 1;
//pub const __INT16_FMTi__ = c"hi";
//pub const _DEBUG = 1;
pub const WGL_COLORSPACE_LINEAR_EXT = 12426;
//pub const __UINT_FAST32_MAX__ = c_uint(4294967295);
pub const WGL_SAMPLE_BUFFERS_3DFX = 8288;
pub const WGL_NUMBER_UNDERLAYS_ARB = 8201;
pub const WGL_DEPTH_FLOAT_EXT = 8256;
pub const WGL_TRANSPARENT_EXT = 8202;
pub const WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = 8390;
//pub const __UINT8_FMTX__ = c"hhX";
//pub const __FLT_EPSILON__ = 0.000000;
//pub const __UINTPTR_WIDTH__ = 64;
//pub const __llvm__ = 1;
pub const WGL_SAMPLES_EXT = 8258;
//pub const __UINT_FAST64_MAX__ = c_ulonglong(18446744073709551615);
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = 8372;
//pub const __INT_FAST32_FMTi__ = c"i";
pub const WGL_FULL_ACCELERATION_EXT = 8231;
pub const WGL_NUMBER_PIXEL_FORMATS_ARB = 8192;
//pub const __FLT_HAS_INFINITY__ = 1;
//pub const __k8 = 1;
pub const WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = 8268;
pub const WGL_BLUE_SHIFT_ARB = 8218;
pub const WGL_COLOR_BITS_EXT = 8212;
//pub const __UINT8_FMTx__ = c"hhx";
//pub const __INTMAX_C_SUFFIX__ = LL;
//pub const __ORDER_LITTLE_ENDIAN__ = 1234;
pub const WGL_TYPE_RGBA_FLOAT_ATI = 8608;
pub const WGL_DRAW_TO_BITMAP_ARB = 8194;
//pub const __INT16_FMTd__ = c"hd";
//pub const __UINT32_FMTX__ = c"X";
//pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = 1;
pub const WGL_ARB_pbuffer = 1;
//pub const __UINT32_C_SUFFIX__ = U;
//pub const __INT32_MAX__ = 2147483647;
pub const WGL_MAX_PBUFFER_WIDTH_ARB = 8239;
//pub const __INTMAX_WIDTH__ = 64;
pub const WGL_CONTEXT_PROFILE_MASK_ARB = 37158;
pub const WGL_GENERIC_ACCELERATION_EXT = 8230;
pub const WGL_RED_SHIFT_ARB = 8214;
//pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = 2;
pub const WGL_CONTEXT_MAJOR_VERSION_ARB = 8337;
pub const WGL_ACCUM_RED_BITS_EXT = 8222;
pub const WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 8318;
pub const WGL_STENCIL_BITS_EXT = 8227;
pub const WGL_NEED_PALETTE_EXT = 8196;
pub const WGL_PBUFFER_LOST_ARB = 8246;
//pub const __SIZE_FMTo__ = c"llo";
pub const WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = 8242;
pub const WGL_NEED_SYSTEM_PALETTE_EXT = 8197;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = 8352;
//pub const __DBL_HAS_QUIET_NAN__ = 1;
pub const WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 8361;
pub const WGL_TRANSPARENT_GREEN_VALUE_ARB = 8248;
//pub const __INT_FAST8_FMTi__ = c"hhi";
//pub const __UINT_LEAST32_FMTo__ = c"o";
pub const WGL_I3D_gamma = 1;
pub const WGL_SUPPORT_GDI_ARB = 8207;
//pub const __STDC_UTF_16__ = 1;
//pub const __UINT_LEAST32_MAX__ = c_uint(4294967295);
//pub const __ATOMIC_RELEASE = 3;
pub const WGL_CONTEXT_MINOR_VERSION_ARB = 8338;
//pub const __UINTMAX_C_SUFFIX__ = ULL;
//pub const __UINT_FAST16_FMTx__ = c"hx";
//pub const __FLT_MIN_EXP__ = -125;
//pub const __SIZEOF_LONG_DOUBLE__ = 8;
//pub const __UINT_LEAST64_FMTu__ = c"llu";
pub const WGL_GPU_VENDOR_AMD = 7936;
pub const WGL_GPU_NUM_PIPES_AMD = 8613;
pub const WGL_AMD_gpu_association = 1;
//pub const __ORDER_PDP_ENDIAN__ = 3412;
pub const WGL_EXT_pixel_format = 1;
//pub const __INT_FAST64_FMTd__ = c"lld";
pub const WGL_LOSE_CONTEXT_ON_RESET_ARB = 33362;
pub const WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 8321;
//pub const __CLANG_ATOMIC_LONG_LOCK_FREE = 2;
pub const WGL_SWAP_LAYER_BUFFERS_ARB = 8198;
//pub const __INT16_TYPE__ = short;
//pub const _INTEGRAL_MAX_BITS = 64;
pub const WGL_SHARE_ACCUM_EXT = 8206;
pub const WGL_NV_render_depth_texture = 1;
//pub const __SSE2_MATH__ = 1;
pub const WGL_AUX1_ARB = 8328;
pub const WGL_TRANSPARENT_ARB = 8202;
//pub const __FLT_MANT_DIG__ = 24;
pub const WGL_ACCUM_BLUE_BITS_EXT = 8224;
//pub const __UINT_FAST64_FMTx__ = c"llx";
pub const WGL_EXT_framebuffer_sRGB = 1;
//pub const __INT_FAST8_MAX__ = 127;
pub const WGL_BIND_TO_TEXTURE_DEPTH_NV = 8355;
//pub const __INTPTR_FMTd__ = c"lld";
//pub const __SIZE_WIDTH__ = 64;
//pub const __UINT_LEAST8_FMTx__ = c"hhx";
pub const WGL_WGLEXT_VERSION = 20180213;
//pub const __INT_LEAST64_FMTi__ = c"lli";
//pub const __INT_FAST16_MAX__ = 32767;
pub const WGL_GPU_CLOCK_AMD = 8612;
//pub const __INTPTR_MAX__ = c_longlong(9223372036854775807);
pub const WGL_NV_DX_interop = 1;
pub const WGL_CUBE_MAP_FACE_ARB = 8316;
//pub const __WINT_TYPE__ = int;
//pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = 2;
pub const WGL_BACK_COLOR_BUFFER_BIT_ARB = 2;
//pub const __UINT64_FMTu__ = c"llu";
//pub const __SSE2__ = 1;
//pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 8320;
pub const WGL_NV_DX_interop2 = 1;
//pub const __INT_MAX__ = 2147483647;
//pub const __INTMAX_FMTi__ = c"lli";
//pub const __DBL_DENORM_MIN__ = 0.000000;
//pub const __clang_major__ = 5;
//pub const __UINT32_MAX__ = c_uint(4294967295);
pub const WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = 8267;
pub const WGL_TRANSPARENT_RED_VALUE_ARB = 8247;
pub const WGL_GREEN_SHIFT_EXT = 8216;
//pub const __FLT_DENORM_MIN__ = 0.000000;
//pub const __DBL_MAX_EXP__ = 1024;
//pub const __INT8_FMTi__ = c"hhi";
pub const WGL_SUPPORT_GDI_EXT = 8207;
//pub const __UINT_LEAST16_MAX__ = 65535;
//pub const APIENTRY = __stdcall;
pub const WGL_NV_vertex_array_range = 1;
//pub const __LDBL_HAS_DENORM__ = 1;
pub const WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = 8274;
//pub const __LDBL_HAS_QUIET_NAN__ = 1;
pub const WGL_EXT_create_context_es2_profile = 1;
pub const WGL_GPU_FASTEST_TARGET_GPUS_AMD = 8610;
//pub const __UINT_FAST8_MAX__ = 255;
pub const WGL_GPU_NUM_RB_AMD = 8615;
//pub const __DBL_MIN_10_EXP__ = -307;
pub const WGL_DEPTH_TEXTURE_FORMAT_NV = 8357;
//pub const __UINT8_FMTu__ = c"hhu";
pub const WGL_ALPHA_BITS_EXT = 8219;
pub const WGL_TEXTURE_DEPTH_COMPONENT_NV = 8358;
//pub const __INT_FAST64_MAX__ = c_longlong(9223372036854775807);
//pub const __UINT16_FMTu__ = c"hu";
pub const WGL_RED_BITS_EXT = 8213;
pub const WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = 2;
//pub const __SIZE_FMTu__ = c"llu";
//pub const __ATOMIC_SEQ_CST = 5;
pub const WGL_BLUE_BITS_ARB = 8217;
//pub const __UINT_FAST32_FMTu__ = c"u";
//pub const __LDBL_MIN_EXP__ = -1021;
pub const WGL_ARB_buffer_region = 1;
pub const WGL_OPTIMAL_PBUFFER_WIDTH_EXT = 8241;
//pub const __clang_patchlevel__ = 1;
pub const WGL_SHARE_DEPTH_EXT = 8204;
pub const WGL_DRAW_TO_WINDOW_ARB = 8193;
pub const WGL_SWAP_UNDEFINED_ARB = 8234;
pub const WGL_TEXTURE_RGB_ARB = 8309;
//pub const __SIZEOF_LONG_LONG__ = 8;
pub const WGL_VIDEO_OUT_FIELD_2 = 8394;
pub const ERROR_MISSING_AFFINITY_MASK_NV = 8401;
pub const ERROR_INVALID_VERSION_ARB = 8341;
pub const WGL_DRAW_TO_BITMAP_EXT = 8194;
pub const WGL_STEREO_POLARITY_NORMAL_3DL = 8279;
//pub const __FXSR__ = 1;
//pub const __UINT8_MAX__ = 255;
//pub const __WCHAR_UNSIGNED__ = 1;
//pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = 1;
//pub const __UINT32_FMTx__ = c"x";
//pub const __UINT16_FMTo__ = c"ho";
pub const WGL_AUX7_ARB = 8334;
pub const WGL_STEREO_POLARITY_INVERT_3DL = 8280;
pub const WGL_RED_SHIFT_EXT = 8214;
//pub const __UINT32_FMTu__ = c"u";
pub const WGL_DEPTH_BITS_ARB = 8226;
//pub const __SIZEOF_POINTER__ = 8;
pub const WGL_GAMMA_TABLE_SIZE_I3D = 8270;
//pub const __SIZE_MAX__ = c_ulonglong(18446744073709551615);
//pub const __INT_FAST16_FMTd__ = c"hd";
pub const WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = 8275;
//pub const __UINT_LEAST32_FMTu__ = c"u";
pub const WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = 8265;
pub const WGL_I3D_image_buffer = 1;
pub const WGL_TEXTURE_RECTANGLE_NV = 8354;
//pub const __FLT_MAX__ = 340282346999999984391321947108527833088.000000;
pub const WGL_3DFX_multisample = 1;
//pub const __k8__ = 1;
//pub const __ATOMIC_CONSUME = 1;
//pub const __tune_k8__ = 1;
//pub const __wglext_h_ = 1;
pub const WGL_TEXTURE_TARGET_ARB = 8307;
//pub const __x86_64__ = 1;
//pub const __LDBL_HAS_INFINITY__ = 1;
//pub const __UINTMAX_FMTx__ = c"llx";
//pub const __UINT64_C_SUFFIX__ = ULL;
//pub const __FLT_MIN_10_EXP__ = -37;
//pub const __INT_LEAST16_MAX__ = 32767;
pub const ERROR_INVALID_PIXEL_TYPE_ARB = 8259;
pub const WGL_AUX_BUFFERS_ARB = 8228;
//pub const __UINT32_FMTo__ = c"o";
//pub const __UINTPTR_FMTo__ = c"llo";
pub const WGL_AUX2_ARB = 8329;
pub const WGL_EXT_swap_control_tear = 1;
//pub const __INT_LEAST16_FMTd__ = c"hd";
//pub const __UINTPTR_FMTx__ = c"llx";
//pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = 1;
pub const WGL_TEXTURE_FORMAT_ARB = 8306;
//pub const __INT_LEAST64_FMTd__ = c"lld";
//pub const __INT_LEAST16_TYPE__ = short;
pub const WGL_DRAW_TO_WINDOW_EXT = 8193;
pub const WGL_NO_ACCELERATION_ARB = 8229;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = 8370;
//pub const __ORDER_BIG_ENDIAN__ = 4321;
//pub const __LDBL_MIN_10_EXP__ = -307;
//pub const __INT_LEAST8_MAX__ = 127;
pub const WGL_TEXTURE_FLOAT_RGBA_NV = 8376;
pub const WGL_NV_present_video = 1;
//pub const __SIZEOF_INT__ = 4;
pub const WGL_FRONT_LEFT_ARB = 8323;
pub const WGL_BIND_TO_VIDEO_RGBA_NV = 8385;
pub const WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = 8395;
pub const WGL_ARB_robustness_application_isolation = 1;
pub const WGL_ARB_framebuffer_sRGB = 1;
pub const WGL_BIND_TO_TEXTURE_RGBA_ARB = 8305;
pub const WGL_MAX_PBUFFER_WIDTH_EXT = 8239;
//pub const __amd64 = 1;
//pub const __OBJC_BOOL_IS_BOOL = 0;
//pub const __LDBL_MAX_10_EXP__ = 308;
//pub const __SIZEOF_INT128__ = 16;
//pub const __UINT_FAST8_FMTx__ = c"hhx";
pub const WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = 8344;
pub const WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = 1;
pub const WGL_SAMPLES_3DFX = 8289;
//pub const __UINT16_FMTx__ = c"hx";
//pub const __UINTPTR_FMTu__ = c"llu";
//pub const __UINT_LEAST16_FMTX__ = c"hX";
//pub const __amd64__ = 1;
//pub const __UINT_FAST32_FMTo__ = c"o";
pub const WGL_MIPMAP_LEVEL_ARB = 8315;
pub const WGL_SWAP_LAYER_BUFFERS_EXT = 8198;
//pub const __clang__ = 1;
//pub const __PTRDIFF_FMTi__ = c"lli";
pub const WGL_MIPMAP_TEXTURE_ARB = 8308;
//pub const __LDBL_DIG__ = 15;
pub const WGL_TRANSPARENT_INDEX_VALUE_ARB = 8251;
pub const WGL_CONTEXT_LAYER_PLANE_ARB = 8339;
pub const WGL_EXT_colorspace = 1;
pub const WGL_FLOAT_COMPONENTS_NV = 8368;
//pub const __UINT64_FMTo__ = c"llo";
//pub const __INT_FAST32_FMTd__ = c"d";
//pub const __ATOMIC_ACQ_REL = 4;
pub const WGL_SWAP_EXCHANGE_EXT = 8232;
pub const WGL_TYPE_RGBA_EXT = 8235;
pub const WGL_VIDEO_OUT_FIELD_1 = 8393;
//pub const __LONG_LONG_MAX__ = c_longlong(9223372036854775807);
pub const WGL_NV_copy_image = 1;
pub const WGL_NV_delay_before_swap = 1;
pub const WGL_VIDEO_OUT_COLOR_NV = 8387;
pub const WGL_MAX_PBUFFER_HEIGHT_EXT = 8240;
pub const WGL_COLOR_BITS_ARB = 8212;
//pub const __INTMAX_MAX__ = c_longlong(9223372036854775807);
//pub const __UINT_LEAST32_FMTx__ = c"x";
//pub const __WCHAR_MAX__ = 65535;
pub const WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = 8266;
//pub const __INT64_MAX__ = c_longlong(9223372036854775807);
//pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = 2;
//pub const __INT_LEAST64_MAX__ = c_longlong(9223372036854775807);
pub const WGL_ATI_pixel_format_float = 1;
pub const WGL_ARB_create_context_robustness = 1;
pub const WGL_DRAW_TO_PBUFFER_ARB = 8237;
pub const WGL_STEREO_ARB = 8210;
pub const WGL_ACCUM_BITS_ARB = 8221;
//pub const __UINTMAX_FMTX__ = c"llX";
//pub const _M_X64 = 100;
pub const WGL_TEXTURE_2D_ARB = 8314;
pub const WGL_I3D_swap_frame_lock = 1;
pub const WGL_NV_float_buffer = 1;
pub const ERROR_INVALID_PIXEL_TYPE_EXT = 8259;
//pub const __FLT_HAS_DENORM__ = 1;
pub const WGL_ALPHA_BITS_ARB = 8219;
//pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = 8353;
pub const WGL_DOUBLE_BUFFER_ARB = 8209;
pub const WGL_PIXEL_TYPE_EXT = 8211;
pub const WGL_ARB_extensions_string = 1;
pub const WGL_NV_render_texture_rectangle = 1;
//pub const __INT32_FMTi__ = c"i";
pub const ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = 8276;
pub const WGL_ACCUM_GREEN_BITS_EXT = 8223;
//pub const __DBL_HAS_INFINITY__ = 1;
//pub const __FINITE_MATH_ONLY__ = 0;
pub const WGL_SWAP_UNDEFINED_EXT = 8234;
//pub const _RECT = struct__RECT;
pub const HPBUFFERARB__ = struct_HPBUFFERARB__;
pub const HPBUFFEREXT__ = struct_HPBUFFEREXT__;
pub const HGPUNV__ = struct_HGPUNV__;
//pub const _GPU_DEVICE = struct__GPU_DEVICE;
pub const HVIDEOOUTPUTDEVICENV__ = struct_HVIDEOOUTPUTDEVICENV__;
pub const HVIDEOINPUTDEVICENV__ = struct_HVIDEOINPUTDEVICENV__;
pub const HPVIDEODEV__ = struct_HPVIDEODEV__;
